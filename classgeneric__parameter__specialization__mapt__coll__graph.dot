digraph "generic_parameter_specialization_mapt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="generic_parameter_specialization_mapt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Author: Diffblue Ltd."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" container_to_specializations" ,fontname="Helvetica"];
  Node2 [label="std::vector\< std::stack\l\< std::vector\< reference\l_typet \> \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node3 [label="std::stack\< std::vector\l\< reference_typet \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node4 [label="std::vector\< reference\l_typet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node5 [label="reference_typet",height=0.2,width=0.4,color="black",URL="$classreference__typet.html",tooltip="The reference type."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="pointer_typet",height=0.2,width=0.4,color="black",URL="$classpointer__typet.html",tooltip="The pointer type These are both 'bitvector_typet' (they have a width) and 'type_with_subtypet' (they ..."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="bitvector_typet",height=0.2,width=0.4,color="red",URL="$classbitvector__typet.html",tooltip="Base class of fixed-width bit-vector types."];
  Node14 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< reference_typet \>" ,fontname="Helvetica"];
  Node14 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node15 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::vector\< reference\l_typet \> \>" ,fontname="Helvetica"];
  Node18 [label="std::stack\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node15 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node14 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::stack\< std::\lvector\< reference_typet \> \> \>" ,fontname="Helvetica"];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" param_to_container" ,fontname="Helvetica"];
  Node19 [label="std::unordered_map\l\< dstringt, generic\l_parameter_specialization\l_mapt::container_paramt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node20 [label="generic_parameter_specialization\l_mapt::container_paramt",height=0.2,width=0.4,color="black",URL="$structgeneric__parameter__specialization__mapt_1_1container__paramt.html",tooltip="The index of the container and the type parameter inside that container."];
  Node16 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node16 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node21 -> Node19 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, generic\l_parameter_specialization\l_mapt::container_paramt \>" ,fontname="Helvetica"];
  Node21 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node22 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node22 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
}
