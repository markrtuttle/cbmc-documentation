digraph "invariant_set_domain_factoryt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="invariant_set_domain\l_factoryt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Pass the necessary arguments to the invariant_set_domaint's when constructed."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ai_domain_factoryt\l\< invariant_set_domaint \>",height=0.2,width=0.4,color="black",URL="$classai__domain__factoryt.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ai_domain_factory_baset",height=0.2,width=0.4,color="black",URL="$classai__domain__factory__baset.html",tooltip=" "];
  Node4 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< invariant_set_domaint \>" ,fontname="Helvetica"];
  Node4 [label="ai_domain_factoryt\l\< domainT \>",height=0.2,width=0.4,color="black",URL="$classai__domain__factoryt.html",tooltip=" "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ip" ,fontname="Helvetica"];
  Node5 [label="invariant_propagationt",height=0.2,width=0.4,color="black",URL="$classinvariant__propagationt.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ait\< invariant_set\l_domaint \>",height=0.2,width=0.4,color="black",URL="$classait.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ai_recursive_interproceduralt",height=0.2,width=0.4,color="black",URL="$classai__recursive__interproceduralt.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ai_baset",height=0.2,width=0.4,color="black",URL="$classai__baset.html",tooltip="This is the basic interface of the abstract interpreter with default implementations of the core func..."];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_handler" ,fontname="Helvetica"];
  Node9 [label="message_handlert",height=0.2,width=0.4,color="black",URL="$classmessage__handlert.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_count" ,fontname="Helvetica"];
  Node10 [label="std::vector\< std::size_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::size_t \>" ,fontname="Helvetica"];
  Node11 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node12 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" domain_factory" ,fontname="Helvetica"];
  Node13 [label="std::unique_ptr\< ai\l_domain_factory_baset \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node14 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ai_domain_factory\l_baset \>" ,fontname="Helvetica"];
  Node14 [label="std::unique_ptr\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node12 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node15 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" storage" ,fontname="Helvetica"];
  Node15 [label="std::unique_ptr\< ai\l_storage_baset \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node16 [label="ai_storage_baset",height=0.2,width=0.4,color="black",URL="$classai__storage__baset.html",tooltip="This is the basic interface for storing domains."];
  Node14 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ai_storage_baset \>" ,fontname="Helvetica"];
  Node17 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" history_factory" ,fontname="Helvetica"];
  Node17 [label="std::unique_ptr\< ai\l_history_factory_baset \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node18 [label="ai_history_factory\l_baset",height=0.2,width=0.4,color="black",URL="$classai__history__factory__baset.html",tooltip="As more detailed histories can get complex (for example, nested loops or deep, mutually recursive cal..."];
  Node14 -> Node17 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ai_history_factory\l_baset \>" ,fontname="Helvetica"];
  Node19 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" no_logging" ,fontname="Helvetica"];
  Node19 [label="null_message_handlert",height=0.2,width=0.4,color="black",URL="$classnull__message__handlert.html",tooltip=" "];
  Node9 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< invariant_set_domaint \>" ,fontname="Helvetica"];
  Node20 [label="ait\< domainT \>",height=0.2,width=0.4,color="black",URL="$classait.html",tooltip="ait supplies three of the four components needed: an abstract interpreter (in this case handling func..."];
  Node7 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" no_logging" ,fontname="Helvetica"];
  Node21 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" object_store" ,fontname="Helvetica"];
  Node21 [label="inv_object_storet",height=0.2,width=0.4,color="black",URL="$classinv__object__storet.html",tooltip=" "];
  Node22 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
  Node22 [label="namespacet",height=0.2,width=0.4,color="black",URL="$classnamespacet.html",tooltip="A namespacet is essentially one or two symbol tables bound together, to allow for symbol lookups in t..."];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="namespace_baset",height=0.2,width=0.4,color="black",URL="$classnamespace__baset.html",tooltip="Basic interface for a namespace."];
  Node24 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_table1\nsymbol_table2" ,fontname="Helvetica"];
  Node24 [label="symbol_table_baset",height=0.2,width=0.4,color="black",URL="$classsymbol__table__baset.html",tooltip="The symbol table base class interface."];
  Node25 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_base_map\nsymbol_module_map" ,fontname="Helvetica"];
  Node25 [label="std::multimap\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node26 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node26 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node27 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbols" ,fontname="Helvetica"];
  Node27 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node26 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node12 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node28 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ,fontname="Helvetica"];
  Node28 [label="numberingt\< irep_idt \>",height=0.2,width=0.4,color="black",URL="$classnumberingt.html",tooltip=" "];
  Node29 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numbers_" ,fontname="Helvetica"];
  Node29 [label="std::unordered_map\l\< irep_idt, number_type,\l std::hash\< irep_idt \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node30 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node30 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node27 -> Node29 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, number\l_type, std::hash\< irep\l_idt \> \>" ,fontname="Helvetica"];
  Node31 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data_" ,fontname="Helvetica"];
  Node31 [label="std::vector\< key_type \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node31 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< key_type \>" ,fontname="Helvetica"];
  Node32 -> Node28 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt \>" ,fontname="Helvetica"];
  Node32 [label="numberingt\< keyt, hasht \>",height=0.2,width=0.4,color="black",URL="$classnumberingt.html",tooltip=" "];
  Node33 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numbers_" ,fontname="Helvetica"];
  Node33 [label="std::unordered_map\l\< keyt, number_type,\l std::hash\< keyt \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node27 -> Node33 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< keyt, number_type,\l std::hash\< keyt \> \>" ,fontname="Helvetica"];
  Node31 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data_" ,fontname="Helvetica"];
  Node34 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" entries" ,fontname="Helvetica"];
  Node34 [label="std::vector\< inv_object\l_storet::entryt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node35 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node35 [label="inv_object_storet::\lentryt",height=0.2,width=0.4,color="black",URL="$structinv__object__storet_1_1entryt.html",tooltip=" "];
  Node36 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" expr" ,fontname="Helvetica"];
  Node36 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node37 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="irept",height=0.2,width=0.4,color="red",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node11 -> Node34 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< inv_object_storet\l::entryt \>" ,fontname="Helvetica"];
  Node43 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" value_sets" ,fontname="Helvetica"];
  Node43 [label="value_setst",height=0.2,width=0.4,color="black",URL="$classvalue__setst.html",tooltip=" "];
  Node22 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
}
