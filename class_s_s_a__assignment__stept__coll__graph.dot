digraph "SSA_assignment_stept"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="SSA_assignment_stept",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="SSA_stept",height=0.2,width=0.4,color="black",URL="$class_s_s_a__stept.html",tooltip="Single SSA step in the equation."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" converted_io_args\nio_args" ,fontname="Helvetica"];
  Node3 [label="std::list\< exprt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node4 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node7 [label="tree_nodet\< treet,\l named_subtreest, sharing \>",height=0.2,width=0.4,color="red",URL="$classtree__nodet.html",tooltip="A node with data in a tree, it contains:"];
  Node12 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data" ,fontname="Helvetica"];
  Node12 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node13 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irept, forward_list\l_as_mapt\< irep_idt, irept \> \>" ,fontname="Helvetica"];
  Node13 [label="sharing_treet\< derivedt,\l named_subtreest \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip="Base class for tree-like data structures with sharing."];
  Node7 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node14 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< exprt \>" ,fontname="Helvetica"];
  Node14 [label="std::list\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node11 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node11 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ssa_lhs" ,fontname="Helvetica"];
  Node15 [label="ssa_exprt",height=0.2,width=0.4,color="black",URL="$classssa__exprt.html",tooltip="Expression providing an SSA-renamed symbol of expressions."];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="symbol_exprt",height=0.2,width=0.4,color="black",URL="$classsymbol__exprt.html",tooltip="Expression to hold a symbol (variable)"];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="nullary_exprt",height=0.2,width=0.4,color="black",URL="$classnullary__exprt.html",tooltip="An expression without operands."];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="expr_protectedt",height=0.2,width=0.4,color="black",URL="$classexpr__protectedt.html",tooltip="Base class for all expressions."];
  Node4 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" called_function\nformat_string\nio_id" ,fontname="Helvetica"];
  Node19 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" comment" ,fontname="Helvetica"];
  Node19 [label="std::string",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="std::basic_string\<\l char \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ssa_full_lhs\nguard\ncond_handle\nguard_handle\nssa_rhs\ncond_expr\noriginal_full_lhs" ,fontname="Helvetica"];
  Node21 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" source" ,fontname="Helvetica"];
  Node21 [label="symex_targett::sourcet",height=0.2,width=0.4,color="black",URL="$structsymex__targett_1_1sourcet.html",tooltip="Identifies source in the context of symbolic execution."];
  Node12 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" function_id" ,fontname="Helvetica"];
  Node22 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" converted_function\l_arguments\nssa_function_arguments" ,fontname="Helvetica"];
  Node22 [label="std::vector\< exprt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node10 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< exprt \>" ,fontname="Helvetica"];
  Node10 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
}
