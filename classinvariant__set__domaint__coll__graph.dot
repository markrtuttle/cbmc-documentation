digraph "invariant_set_domaint"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="invariant_set_domaint",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ai_domain_baset",height=0.2,width=0.4,color="black",URL="$classai__domain__baset.html",tooltip="The interface offered by a domain, allows code to manipulate domains without knowing their exact type..."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" invariant_set" ,fontname="Helvetica"];
  Node3 [label="invariant_sett",height=0.2,width=0.4,color="black",URL="$classinvariant__sett.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" object_store" ,fontname="Helvetica"];
  Node4 [label="inv_object_storet",height=0.2,width=0.4,color="black",URL="$classinv__object__storet.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
  Node5 [label="namespacet",height=0.2,width=0.4,color="black",URL="$classnamespacet.html",tooltip="A namespacet is essentially one or two symbol tables bound together, to allow for symbol lookups in t..."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="namespace_baset",height=0.2,width=0.4,color="black",URL="$classnamespace__baset.html",tooltip="Basic interface for a namespace."];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_table1\nsymbol_table2" ,fontname="Helvetica"];
  Node7 [label="symbol_table_baset",height=0.2,width=0.4,color="black",URL="$classsymbol__table__baset.html",tooltip="The symbol table base class interface."];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_base_map\nsymbol_module_map" ,fontname="Helvetica"];
  Node8 [label="std::multimap\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node9 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node10 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbols" ,fontname="Helvetica"];
  Node11 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node10 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node12 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ,fontname="Helvetica"];
  Node12 [label="numberingt\< irep_idt \>",height=0.2,width=0.4,color="black",URL="$classnumberingt.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numbers_" ,fontname="Helvetica"];
  Node13 [label="std::unordered_map\l\< irep_idt, number_type,\l std::hash\< irep_idt \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node14 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node11 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, number\l_type, std::hash\< irep\l_idt \> \>" ,fontname="Helvetica"];
  Node15 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data_" ,fontname="Helvetica"];
  Node15 [label="std::vector\< key_type \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< key_type \>" ,fontname="Helvetica"];
  Node16 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node10 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node17 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt \>" ,fontname="Helvetica"];
  Node17 [label="numberingt\< keyt, hasht \>",height=0.2,width=0.4,color="black",URL="$classnumberingt.html",tooltip=" "];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numbers_" ,fontname="Helvetica"];
  Node18 [label="std::unordered_map\l\< keyt, number_type,\l std::hash\< keyt \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< keyt, number_type,\l std::hash\< keyt \> \>" ,fontname="Helvetica"];
  Node15 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data_" ,fontname="Helvetica"];
  Node19 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" entries" ,fontname="Helvetica"];
  Node19 [label="std::vector\< inv_object\l_storet::entryt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node20 [label="inv_object_storet::\lentryt",height=0.2,width=0.4,color="black",URL="$structinv__object__storet_1_1entryt.html",tooltip=" "];
  Node21 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" expr" ,fontname="Helvetica"];
  Node21 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="irept",height=0.2,width=0.4,color="red",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node16 -> Node19 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< inv_object_storet\l::entryt \>" ,fontname="Helvetica"];
  Node28 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" value_sets" ,fontname="Helvetica"];
  Node28 [label="value_setst",height=0.2,width=0.4,color="black",URL="$classvalue__setst.html",tooltip=" "];
  Node5 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
  Node29 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" eq_set" ,fontname="Helvetica"];
  Node29 [label="unsigned_union_find",height=0.2,width=0.4,color="black",URL="$classunsigned__union__find.html",tooltip=" "];
  Node30 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" nodes" ,fontname="Helvetica"];
  Node30 [label="std::vector\< unsigned\l_union_find::nodet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node31 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node31 [label="unsigned_union_find\l::nodet",height=0.2,width=0.4,color="black",URL="$structunsigned__union__find_1_1nodet.html",tooltip=" "];
  Node16 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned_union_find\l::nodet \>" ,fontname="Helvetica"];
  Node32 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ne_set\nle_set" ,fontname="Helvetica"];
  Node32 [label="std::set\< std::pair\l\< unsigned, unsigned \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node33 -> Node32 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::pair\< unsigned,\l unsigned \> \>" ,fontname="Helvetica"];
  Node33 [label="std::set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node34 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" bounds_map" ,fontname="Helvetica"];
  Node34 [label="std::map\< unsigned,\l boundst \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node35 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node35 [label="interval_templatet\< T \>",height=0.2,width=0.4,color="black",URL="$classinterval__templatet.html",tooltip=" "];
  Node10 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" lower\nupper" ,fontname="Helvetica"];
  Node36 -> Node34 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, boundst \>" ,fontname="Helvetica"];
  Node36 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node10 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node37 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" has_values" ,fontname="Helvetica"];
  Node37 [label="tvt",height=0.2,width=0.4,color="black",URL="$classtvt.html",tooltip=" "];
}
