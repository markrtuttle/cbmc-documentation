digraph "rd_range_domaint"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="rd_range_domaint",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Because the class is inherited from ai_domain_baset, its instance represents an element of a domain o..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ai_domain_baset",height=0.2,width=0.4,color="black",URL="$classai__domain__baset.html",tooltip="The interface offered by a domain, allows code to manipulate domains without knowing their exact type..."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" bv_container" ,fontname="Helvetica"];
  Node3 [label="sparse_bitvector_analysist\l\< reaching_definitiont \>",height=0.2,width=0.4,color="black",URL="$classsparse__bitvector__analysist.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" value_map" ,fontname="Helvetica"];
  Node4 [label="std::unordered_map\l\< dstringt, inner_mapt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node5 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node6 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, inner_mapt \>" ,fontname="Helvetica"];
  Node6 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node7 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node8 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" values" ,fontname="Helvetica"];
  Node9 [label="std::vector\< typename\l inner_mapt::const_iterator \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< typename inner_mapt\l::const_iterator \>" ,fontname="Helvetica"];
  Node10 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node11 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< reaching_definitiont \>" ,fontname="Helvetica"];
  Node11 [label="sparse_bitvector_analysist\< V \>",height=0.2,width=0.4,color="black",URL="$classsparse__bitvector__analysist.html",tooltip="An instance of this class provides an assignment of unique numeric ID to each inserted reaching_defin..."];
  Node4 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" value_map" ,fontname="Helvetica"];
  Node9 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" values" ,fontname="Helvetica"];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" export_cache" ,fontname="Helvetica"];
  Node12 [label="std::unordered_map\l\< irep_idt, ranges_at\l_loct \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node13 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node7 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node8 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node5 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node6 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, ranges\l_at_loct \>" ,fontname="Helvetica"];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" has_values" ,fontname="Helvetica"];
  Node14 [label="tvt",height=0.2,width=0.4,color="black",URL="$classtvt.html",tooltip=" "];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" values" ,fontname="Helvetica"];
  Node15 [label="std::unordered_map\l\< irep_idt, values_innert \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node16 [label="std::set\< std::size_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::size_t \>" ,fontname="Helvetica"];
  Node17 [label="std::set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node7 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node6 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, values\l_innert \>" ,fontname="Helvetica"];
}
