digraph "dep_graph_domaint"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="dep_graph_domaint",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ai_domain_baset",height=0.2,width=0.4,color="black",URL="$classai__domain__baset.html",tooltip="The interface offered by a domain, allows code to manipulate domains without knowing their exact type..."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" node_id" ,fontname="Helvetica"];
  Node3 [label="grapht\< dep_nodet \>",height=0.2,width=0.4,color="black",URL="$classgrapht.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" nodes" ,fontname="Helvetica"];
  Node4 [label="std::vector\< nodet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< nodet \>" ,fontname="Helvetica"];
  Node5 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node6 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dep_nodet \>" ,fontname="Helvetica"];
  Node7 [label="grapht\< N \>",height=0.2,width=0.4,color="black",URL="$classgrapht.html",tooltip="A generic directed graph with a parametric node type."];
  Node4 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" nodes" ,fontname="Helvetica"];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" control_dep_candidates\ndata_deps\ncontrol_deps" ,fontname="Helvetica"];
  Node8 [label="std::set\< goto_programt\l::const_targett \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node9 [label="std::list\< T \>::const\l_iterator",height=0.2,width=0.4,color="grey75",tooltip="STL iterator class."];
  Node10 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_programt::const\l_targett \>" ,fontname="Helvetica"];
  Node10 [label="std::set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node11 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" has_values" ,fontname="Helvetica"];
  Node12 [label="tvt",height=0.2,width=0.4,color="black",URL="$classtvt.html",tooltip=" "];
}
