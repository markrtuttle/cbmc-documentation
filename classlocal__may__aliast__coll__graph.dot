digraph "local_may_aliast"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="local_may_aliast",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dirty" ,fontname="Helvetica"];
  Node2 [label="dirtyt",height=0.2,width=0.4,color="black",URL="$classdirtyt.html",tooltip="Dirty variables are ones which have their address taken so we can't reliably work out where they may ..."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dirty" ,fontname="Helvetica"];
  Node3 [label="std::unordered_set\l\< dstringt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node4 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node5 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt \>" ,fontname="Helvetica"];
  Node5 [label="std::unordered_set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node6 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" loc_infos" ,fontname="Helvetica"];
  Node7 [label="std::vector\< loc_infot \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node8 [label="local_may_aliast::loc\l_infot",height=0.2,width=0.4,color="black",URL="$classlocal__may__aliast_1_1loc__infot.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" aliases" ,fontname="Helvetica"];
  Node9 [label="unsigned_union_find",height=0.2,width=0.4,color="black",URL="$classunsigned__union__find.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" nodes" ,fontname="Helvetica"];
  Node10 [label="std::vector\< unsigned\l_union_find::nodet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node11 [label="unsigned_union_find\l::nodet",height=0.2,width=0.4,color="black",URL="$structunsigned__union__find_1_1nodet.html",tooltip=" "];
  Node12 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned_union_find\l::nodet \>" ,fontname="Helvetica"];
  Node12 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node13 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< loc_infot \>" ,fontname="Helvetica"];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" cfg" ,fontname="Helvetica"];
  Node14 [label="local_cfgt",height=0.2,width=0.4,color="black",URL="$classlocal__cfgt.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" nodes" ,fontname="Helvetica"];
  Node15 [label="std::vector\< nodet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< nodet \>" ,fontname="Helvetica"];
  Node16 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" loc_map" ,fontname="Helvetica"];
  Node16 [label="std::map\< goto_programt\l::const_targett, node_nrt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node17 [label="std::list\< T \>::const\l_iterator",height=0.2,width=0.4,color="grey75",tooltip="STL iterator class."];
  Node18 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_programt::const\l_targett, node_nrt \>" ,fontname="Helvetica"];
  Node18 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node6 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node13 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" objects" ,fontname="Helvetica"];
  Node19 [label="numberingt\< exprt,\l irep_hash \>",height=0.2,width=0.4,color="black",URL="$classnumberingt.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numbers_" ,fontname="Helvetica"];
  Node20 [label="std::unordered_map\l\< exprt, number_type,\l irep_hash \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node21 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node24 [label="tree_nodet\< treet,\l named_subtreest, sharing \>",height=0.2,width=0.4,color="red",URL="$classtree__nodet.html",tooltip="A node with data in a tree, it contains:"];
  Node4 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data" ,fontname="Helvetica"];
  Node27 -> Node23 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irept, forward_list\l_as_mapt\< irep_idt, irept \> \>" ,fontname="Helvetica"];
  Node27 [label="sharing_treet\< derivedt,\l named_subtreest \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip="Base class for tree-like data structures with sharing."];
  Node24 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node28 -> Node20 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< exprt, number_type,\l irep_hash \>" ,fontname="Helvetica"];
  Node28 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node6 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node13 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node29 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data_" ,fontname="Helvetica"];
  Node29 [label="std::vector\< key_type \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node29 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< key_type \>" ,fontname="Helvetica"];
  Node30 -> Node19 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< exprt, irep_hash \>" ,fontname="Helvetica"];
  Node30 [label="numberingt\< keyt, hasht \>",height=0.2,width=0.4,color="black",URL="$classnumberingt.html",tooltip=" "];
  Node31 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numbers_" ,fontname="Helvetica"];
  Node31 [label="std::unordered_map\l\< keyt, number_type,\l std::hash\< keyt \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node28 -> Node31 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< keyt, number_type,\l std::hash\< keyt \> \>" ,fontname="Helvetica"];
  Node29 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data_" ,fontname="Helvetica"];
  Node32 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" locals" ,fontname="Helvetica"];
  Node32 [label="localst",height=0.2,width=0.4,color="black",URL="$classlocalst.html",tooltip=" "];
  Node33 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" locals" ,fontname="Helvetica"];
  Node33 [label="std::unordered_set\l\< irep_idt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node5 -> Node33 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt \>" ,fontname="Helvetica"];
}
