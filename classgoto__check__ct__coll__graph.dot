digraph "goto_check_ct"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="goto_check_ct",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" error_labels" ,fontname="Helvetica"];
  Node2 [label="std::list\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node3 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" log" ,fontname="Helvetica"];
  Node4 [label="messaget",height=0.2,width=0.4,color="black",URL="$classmessaget.html",tooltip="Class that provides messages with a built-in verbosity 'level'."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_handler" ,fontname="Helvetica"];
  Node5 [label="message_handlert",height=0.2,width=0.4,color="black",URL="$classmessage__handlert.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_count" ,fontname="Helvetica"];
  Node6 [label="std::vector\< std::size_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::size_t \>" ,fontname="Helvetica"];
  Node7 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node3 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node8 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" cyan\nbright_yellow\nbold\nyellow\nbright_blue\nmagenta\nreset\nbright_magenta\nunderline\nblue\n..." ,fontname="Helvetica"];
  Node8 [label="messaget::commandt",height=0.2,width=0.4,color="black",URL="$classmessaget_1_1commandt.html",tooltip=" "];
  Node9 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mstream" ,fontname="Helvetica"];
  Node9 [label="messaget::mstreamt",height=0.2,width=0.4,color="black",URL="$classmessaget_1_1mstreamt.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="std::ostringstream",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="std::basic_ostringstream\l\< char \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="std::basic_ostream\l\< Char \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="std::basic_ios\< Char \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node4 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message" ,fontname="Helvetica"];
  Node15 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" source_location" ,fontname="Helvetica"];
  Node15 [label="source_locationt",height=0.2,width=0.4,color="black",URL="$classsource__locationt.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip=" "];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node18 [label="tree_nodet\< treet,\l named_subtreest, sharing \>",height=0.2,width=0.4,color="red",URL="$classtree__nodet.html",tooltip="A node with data in a tree, it contains:"];
  Node21 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data" ,fontname="Helvetica"];
  Node21 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node22 -> Node17 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irept, forward_list\l_as_mapt\< irep_idt, irept \> \>" ,fontname="Helvetica"];
  Node22 [label="sharing_treet\< derivedt,\l named_subtreest \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip="Base class for tree-like data structures with sharing."];
  Node18 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node23 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" eom" ,fontname="Helvetica"];
  Node23 [label="messaget::eomt",height=0.2,width=0.4,color="black",URL="$classmessaget_1_1eomt.html",tooltip=" "];
  Node24 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
  Node24 [label="namespacet",height=0.2,width=0.4,color="black",URL="$classnamespacet.html",tooltip="A namespacet is essentially one or two symbol tables bound together, to allow for symbol lookups in t..."];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="namespace_baset",height=0.2,width=0.4,color="black",URL="$classnamespace__baset.html",tooltip="Basic interface for a namespace."];
  Node26 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_table1\nsymbol_table2" ,fontname="Helvetica"];
  Node26 [label="symbol_table_baset",height=0.2,width=0.4,color="black",URL="$classsymbol__table__baset.html",tooltip="The symbol table base class interface."];
  Node27 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_base_map\nsymbol_module_map" ,fontname="Helvetica"];
  Node27 [label="std::multimap\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node28 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node28 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node29 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbols" ,fontname="Helvetica"];
  Node29 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node28 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node3 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node21 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mode" ,fontname="Helvetica"];
  Node30 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" name_to_flag" ,fontname="Helvetica"];
  Node30 [label="std::map\< dstringt,\l bool * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node31 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, bool * \>" ,fontname="Helvetica"];
  Node31 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node28 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node3 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node32 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" local_bitvector_analysis" ,fontname="Helvetica"];
  Node32 [label="std::unique_ptr\< local\l_bitvector_analysist \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node33 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node33 [label="local_bitvector_analysist",height=0.2,width=0.4,color="black",URL="$classlocal__bitvector__analysist.html",tooltip=" "];
  Node34 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dirty" ,fontname="Helvetica"];
  Node34 [label="dirtyt",height=0.2,width=0.4,color="black",URL="$classdirtyt.html",tooltip="Dirty variables are ones which have their address taken so we can't reliably work out where they may ..."];
  Node35 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dirty" ,fontname="Helvetica"];
  Node35 [label="std::unordered_set\l\< dstringt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node36 -> Node35 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt \>" ,fontname="Helvetica"];
  Node36 [label="std::unordered_set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node28 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node37 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" cfg" ,fontname="Helvetica"];
  Node37 [label="local_cfgt",height=0.2,width=0.4,color="black",URL="$classlocal__cfgt.html",tooltip=" "];
  Node38 -> Node37 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" nodes" ,fontname="Helvetica"];
  Node38 [label="std::vector\< nodet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node38 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< nodet \>" ,fontname="Helvetica"];
  Node39 -> Node37 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" loc_map" ,fontname="Helvetica"];
  Node39 [label="std::map\< goto_programt\l::const_targett, node_nrt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node40 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node40 [label="std::list\< T \>::const\l_iterator",height=0.2,width=0.4,color="grey75",tooltip="STL iterator class."];
  Node31 -> Node39 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_programt::const\l_targett, node_nrt \>" ,fontname="Helvetica"];
  Node41 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pointers" ,fontname="Helvetica"];
  Node41 [label="numberingt\< dstringt \>",height=0.2,width=0.4,color="black",URL="$classnumberingt.html",tooltip=" "];
  Node42 -> Node41 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numbers_" ,fontname="Helvetica"];
  Node42 [label="std::unordered_map\l\< dstringt, number_type,\l std::hash\< dstringt \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node42 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node29 -> Node42 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, number\l_type, std::hash\< dstringt \> \>" ,fontname="Helvetica"];
  Node43 -> Node41 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data_" ,fontname="Helvetica"];
  Node43 [label="std::vector\< key_type \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node43 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< key_type \>" ,fontname="Helvetica"];
  Node44 -> Node41 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt \>" ,fontname="Helvetica"];
  Node44 [label="numberingt\< keyt, hasht \>",height=0.2,width=0.4,color="black",URL="$classnumberingt.html",tooltip=" "];
  Node45 -> Node44 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numbers_" ,fontname="Helvetica"];
  Node45 [label="std::unordered_map\l\< keyt, number_type,\l std::hash\< keyt \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node29 -> Node45 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< keyt, number_type,\l std::hash\< keyt \> \>" ,fontname="Helvetica"];
  Node43 -> Node44 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data_" ,fontname="Helvetica"];
  Node24 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
  Node46 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" loc_infos" ,fontname="Helvetica"];
  Node46 [label="std::vector\< points\l_tot \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node47 -> Node46 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node47 [label="expanding_vectort\< T \>",height=0.2,width=0.4,color="black",URL="$classexpanding__vectort.html",tooltip=" "];
  Node7 -> Node46 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< points_tot \>" ,fontname="Helvetica"];
  Node48 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" locals" ,fontname="Helvetica"];
  Node48 [label="localst",height=0.2,width=0.4,color="black",URL="$classlocalst.html",tooltip=" "];
  Node49 -> Node48 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" locals" ,fontname="Helvetica"];
  Node49 [label="std::unordered_set\l\< irep_idt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node49 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node36 -> Node49 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt \>" ,fontname="Helvetica"];
  Node50 -> Node32 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< local_bitvector_analysist \>" ,fontname="Helvetica"];
  Node50 [label="std::unique_ptr\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node3 -> Node50 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node51 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" allocations" ,fontname="Helvetica"];
  Node51 [label="std::list\< allocationt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node2 -> Node51 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< allocationt \>" ,fontname="Helvetica"];
  Node52 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" assertions" ,fontname="Helvetica"];
  Node52 [label="std::set\< std::pair\l\< exprt, exprt \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node53 -> Node52 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::pair\< exprt,\l exprt \> \>" ,fontname="Helvetica"];
  Node53 [label="std::set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node28 -> Node53 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node54 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" new_code" ,fontname="Helvetica"];
  Node54 [label="goto_programt",height=0.2,width=0.4,color="black",URL="$classgoto__programt.html",tooltip="A generic container class for the GOTO intermediate representation of one function."];
  Node55 -> Node54 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" instructions" ,fontname="Helvetica"];
  Node55 [label="std::list\< instructiont \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node56 -> Node55 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node56 [label="statement_list_parse\l_treet::instructiont",height=0.2,width=0.4,color="black",URL="$structstatement__list__parse__treet_1_1instructiont.html",tooltip="Represents a regular Statement List instruction which consists out of one or more codet tokens."];
  Node57 -> Node56 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" tokens" ,fontname="Helvetica"];
  Node57 [label="std::vector\< codet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node58 -> Node57 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node58 [label="codet",height=0.2,width=0.4,color="black",URL="$classcodet.html",tooltip="Data structure for representing an arbitrary statement in a program."];
  Node59 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node16 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 -> Node57 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< codet \>" ,fontname="Helvetica"];
  Node2 -> Node55 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< instructiont \>" ,fontname="Helvetica"];
}
