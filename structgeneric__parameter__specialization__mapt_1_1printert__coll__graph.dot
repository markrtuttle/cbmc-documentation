digraph "generic_parameter_specialization_mapt::printert"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="generic_parameter_specialization\l_mapt::printert",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A wrapper for a generic_parameter_specialization_mapt and a namespacet that can be output to a stream..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
  Node2 [label="namespacet",height=0.2,width=0.4,color="black",URL="$classnamespacet.html",tooltip="A namespacet is essentially one or two symbol tables bound together, to allow for symbol lookups in t..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="namespace_baset",height=0.2,width=0.4,color="black",URL="$classnamespace__baset.html",tooltip="Basic interface for a namespace."];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_table1\nsymbol_table2" ,fontname="Helvetica"];
  Node4 [label="symbol_table_baset",height=0.2,width=0.4,color="black",URL="$classsymbol__table__baset.html",tooltip="The symbol table base class interface."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_base_map\nsymbol_module_map" ,fontname="Helvetica"];
  Node5 [label="std::multimap\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node6 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node7 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbols" ,fontname="Helvetica"];
  Node8 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node6 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node7 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ,fontname="Helvetica"];
  Node9 [label="generic_parameter_specialization_mapt",height=0.2,width=0.4,color="black",URL="$classgeneric__parameter__specialization__mapt.html",tooltip="Author: Diffblue Ltd."];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" container_to_specializations" ,fontname="Helvetica"];
  Node10 [label="std::vector\< std::stack\l\< std::vector\< reference\l_typet \> \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node11 [label="std::stack\< std::vector\l\< reference_typet \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node12 [label="std::vector\< reference\l_typet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node13 [label="reference_typet",height=0.2,width=0.4,color="black",URL="$classreference__typet.html",tooltip="The reference type."];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="pointer_typet",height=0.2,width=0.4,color="red",URL="$classpointer__typet.html",tooltip="The pointer type These are both 'bitvector_typet' (they have a width) and 'type_with_subtypet' (they ..."];
  Node22 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< reference_typet \>" ,fontname="Helvetica"];
  Node22 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node7 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node25 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::vector\< reference\l_typet \> \>" ,fontname="Helvetica"];
  Node25 [label="std::stack\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node7 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node22 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::stack\< std::\lvector\< reference_typet \> \> \>" ,fontname="Helvetica"];
  Node26 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" param_to_container" ,fontname="Helvetica"];
  Node26 [label="std::unordered_map\l\< dstringt, generic\l_parameter_specialization\l_mapt::container_paramt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node27 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node27 [label="generic_parameter_specialization\l_mapt::container_paramt",height=0.2,width=0.4,color="black",URL="$structgeneric__parameter__specialization__mapt_1_1container__paramt.html",tooltip="The index of the container and the type parameter inside that container."];
  Node23 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node23 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node8 -> Node26 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, generic\l_parameter_specialization\l_mapt::container_paramt \>" ,fontname="Helvetica"];
}
