digraph "rd_range_domain_factoryt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="rd_range_domain_factoryt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This ensures that all domains are constructed with the appropriate pointer back to the analysis engin..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ai_domain_factoryt\l\< rd_range_domaint \>",height=0.2,width=0.4,color="black",URL="$classai__domain__factoryt.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ai_domain_factory_baset",height=0.2,width=0.4,color="black",URL="$classai__domain__factory__baset.html",tooltip=" "];
  Node4 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< rd_range_domaint \>" ,fontname="Helvetica"];
  Node4 [label="ai_domain_factoryt\l\< domainT \>",height=0.2,width=0.4,color="black",URL="$classai__domain__factoryt.html",tooltip=" "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" bv_container" ,fontname="Helvetica"];
  Node5 [label="sparse_bitvector_analysist\l\< reaching_definitiont \>",height=0.2,width=0.4,color="black",URL="$classsparse__bitvector__analysist.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" value_map" ,fontname="Helvetica"];
  Node6 [label="std::unordered_map\l\< dstringt, inner_mapt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node7 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node8 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, inner_mapt \>" ,fontname="Helvetica"];
  Node8 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node9 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node10 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" values" ,fontname="Helvetica"];
  Node11 [label="std::vector\< typename\l inner_mapt::const_iterator \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< typename inner_mapt\l::const_iterator \>" ,fontname="Helvetica"];
  Node12 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node10 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node13 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< reaching_definitiont \>" ,fontname="Helvetica"];
  Node13 [label="sparse_bitvector_analysist\< V \>",height=0.2,width=0.4,color="black",URL="$classsparse__bitvector__analysist.html",tooltip="An instance of this class provides an assignment of unique numeric ID to each inserted reaching_defin..."];
  Node6 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" value_map" ,fontname="Helvetica"];
  Node11 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" values" ,fontname="Helvetica"];
}
