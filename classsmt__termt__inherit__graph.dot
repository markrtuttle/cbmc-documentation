digraph "smt_termt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="smt_termt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkgreen",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irept, forward_list\l_as_mapt\< irep_idt, irept \> \>" ,fontname="Helvetica"];
  Node4 [label="sharing_treet\< derivedt,\l named_subtreest \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip="Base class for tree-like data structures with sharing."];
  Node5 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="smt_sortt::storert\l\< smt_termt \>",height=0.2,width=0.4,color="black",URL="$classsmt__sortt_1_1storert.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< smt_termt \>" ,fontname="Helvetica"];
  Node6 [label="smt_sortt::storert\l\< derivedt \>",height=0.2,width=0.4,color="black",URL="$classsmt__sortt_1_1storert.html",tooltip="Class for adding the ability to up and down cast smt_sortt to and from irept."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="smt_bit_vector_constant\l_termt",height=0.2,width=0.4,color="black",URL="$classsmt__bit__vector__constant__termt.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="smt_bool_literal_termt",height=0.2,width=0.4,color="black",URL="$classsmt__bool__literal__termt.html",tooltip=" "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="smt_exists_termt",height=0.2,width=0.4,color="black",URL="$classsmt__exists__termt.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="smt_forall_termt",height=0.2,width=0.4,color="black",URL="$classsmt__forall__termt.html",tooltip=" "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="smt_function_application\l_termt",height=0.2,width=0.4,color="black",URL="$classsmt__function__application__termt.html",tooltip=" "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="smt_identifier_termt",height=0.2,width=0.4,color="black",URL="$classsmt__identifier__termt.html",tooltip="Stores identifiers in unescaped and unquoted form."];
}
