digraph "java_bytecode_convert_methodt::variablet"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="java_bytecode_convert\l_methodt::variablet",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" holes" ,fontname="Helvetica"];
  Node2 [label="std::vector\< java_bytecode\l_convert_methodt::holet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node3 [label="java_bytecode_convert\l_methodt::holet",height=0.2,width=0.4,color="black",URL="$structjava__bytecode__convert__methodt_1_1holet.html",tooltip=" "];
  Node4 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< java_bytecode_convert\l_methodt::holet \>" ,fontname="Helvetica"];
  Node4 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node5 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_expr" ,fontname="Helvetica"];
  Node6 [label="symbol_exprt",height=0.2,width=0.4,color="black",URL="$classsymbol__exprt.html",tooltip="Expression to hold a symbol (variable)"];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="nullary_exprt",height=0.2,width=0.4,color="black",URL="$classnullary__exprt.html",tooltip="An expression without operands."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="expr_protectedt",height=0.2,width=0.4,color="black",URL="$classexpr__protectedt.html",tooltip="Base class for all expressions."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="red",URL="$classsharing__treet.html",tooltip=" "];
}
