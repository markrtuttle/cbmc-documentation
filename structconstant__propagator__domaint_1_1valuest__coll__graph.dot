digraph "constant_propagator_domaint::valuest"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="constant_propagator\l_domaint::valuest",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" replace_const" ,fontname="Helvetica"];
  Node2 [label="address_of_aware_replace\l_symbolt",height=0.2,width=0.4,color="black",URL="$classaddress__of__aware__replace__symbolt.html",tooltip="Replace symbols with constants while maintaining syntactically valid expressions."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="unchecked_replace_symbolt",height=0.2,width=0.4,color="black",URL="$classunchecked__replace__symbolt.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="replace_symbolt",height=0.2,width=0.4,color="black",URL="$classreplace__symbolt.html",tooltip="Replace a symbol expression by a given expression."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" expr_map" ,fontname="Helvetica"];
  Node5 [label="std::unordered_map\l\< irep_idt, exprt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node6 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node7 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="irept",height=0.2,width=0.4,color="red",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node16 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, exprt \>" ,fontname="Helvetica"];
  Node16 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node17 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node14 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node14 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" bindings" ,fontname="Helvetica"];
  Node18 [label="std::set\< dstringt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node19 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt \>" ,fontname="Helvetica"];
  Node19 [label="std::set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node17 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
}
