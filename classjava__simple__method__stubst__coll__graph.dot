digraph "java_simple_method_stubst"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="java_simple_method\l_stubst",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_handler" ,fontname="Helvetica"];
  Node2 [label="message_handlert",height=0.2,width=0.4,color="black",URL="$classmessage__handlert.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_count" ,fontname="Helvetica"];
  Node3 [label="std::vector\< std::size_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::size_t \>" ,fontname="Helvetica"];
  Node4 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node5 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_table" ,fontname="Helvetica"];
  Node6 [label="symbol_table_baset",height=0.2,width=0.4,color="black",URL="$classsymbol__table__baset.html",tooltip="The symbol table base class interface."];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_base_map\nsymbol_module_map" ,fontname="Helvetica"];
  Node7 [label="std::multimap\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node8 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node9 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbols" ,fontname="Helvetica"];
  Node9 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node5 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" object_factory_parameters" ,fontname="Helvetica"];
  Node10 [label="java_object_factory\l_parameterst",height=0.2,width=0.4,color="black",URL="$structjava__object__factory__parameterst.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="object_factory_parameterst",height=0.2,width=0.4,color="black",URL="$structobject__factory__parameterst.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" function_id" ,fontname="Helvetica"];
  Node12 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" string_input_values" ,fontname="Helvetica"];
  Node13 [label="std::list\< std::string \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node14 [label="std::string",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="std::basic_string\<\l char \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node16 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::string \>" ,fontname="Helvetica"];
  Node16 [label="std::list\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node5 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node17 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" assume_inputs_interval" ,fontname="Helvetica"];
  Node17 [label="interval_uniont",height=0.2,width=0.4,color="black",URL="$classinterval__uniont.html",tooltip="Represents a set of integers by a union of intervals, which are stored in increasing order for effici..."];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" intervals" ,fontname="Helvetica"];
  Node18 [label="std::vector\< interval\l_templatet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node19 [label="interval_templatet\< T \>",height=0.2,width=0.4,color="black",URL="$classinterval__templatet.html",tooltip=" "];
  Node5 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" lower\nupper" ,fontname="Helvetica"];
  Node4 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< interval_templatet \>" ,fontname="Helvetica"];
}
