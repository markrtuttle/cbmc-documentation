digraph "all_properties_verifier_with_fault_localizationt&lt; incremental_goto_checkerT &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="all_properties_verifier\l_with_fault_localizationt\l\< incremental_goto_checkerT \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Requires an incremental goto checker that is a goto_trace_providert and fault_localization_providert."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="goto_verifiert",height=0.2,width=0.4,color="black",URL="$classgoto__verifiert.html",tooltip="An implementation of goto_verifiert checks all properties in a goto model."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" options" ,fontname="Helvetica"];
  Node3 [label="optionst",height=0.2,width=0.4,color="black",URL="$classoptionst.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_list" ,fontname="Helvetica"];
  Node4 [label="std::list\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node5 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" option_map" ,fontname="Helvetica"];
  Node6 [label="std::map\< std::string,\l value_listt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node7 [label="std::string",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="std::basic_string\<\l char \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::string, value\l_listt \>" ,fontname="Helvetica"];
  Node9 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node10 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node11 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" properties" ,fontname="Helvetica"];
  Node11 [label="std::map\< irep_idt,\l property_infot \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node12 [label="property_infot",height=0.2,width=0.4,color="black",URL="$structproperty__infot.html",tooltip=" "];
  Node7 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" description" ,fontname="Helvetica"];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node13 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node9 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, property\l_infot \>" ,fontname="Helvetica"];
  Node14 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" log" ,fontname="Helvetica"];
  Node14 [label="messaget",height=0.2,width=0.4,color="black",URL="$classmessaget.html",tooltip="Class that provides messages with a built-in verbosity 'level'."];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_handler" ,fontname="Helvetica"];
  Node15 [label="message_handlert",height=0.2,width=0.4,color="black",URL="$classmessage__handlert.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_count" ,fontname="Helvetica"];
  Node16 [label="std::vector\< std::size_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::size_t \>" ,fontname="Helvetica"];
  Node17 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node5 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node18 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" cyan\nbright_yellow\nbold\nyellow\nbright_blue\nmagenta\nreset\nbright_magenta\nunderline\nblue\n..." ,fontname="Helvetica"];
  Node18 [label="messaget::commandt",height=0.2,width=0.4,color="black",URL="$classmessaget_1_1commandt.html",tooltip=" "];
  Node19 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mstream" ,fontname="Helvetica"];
  Node19 [label="messaget::mstreamt",height=0.2,width=0.4,color="black",URL="$classmessaget_1_1mstreamt.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="std::ostringstream",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="std::basic_ostringstream\l\< char \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="std::basic_ostream\l\< Char \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node14 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message" ,fontname="Helvetica"];
  Node25 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" source_location" ,fontname="Helvetica"];
  Node25 [label="source_locationt",height=0.2,width=0.4,color="black",URL="$classsource__locationt.html",tooltip=" "];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node27 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="red",URL="$classsharing__treet.html",tooltip=" "];
  Node32 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" eom" ,fontname="Helvetica"];
  Node32 [label="messaget::eomt",height=0.2,width=0.4,color="black",URL="$classmessaget_1_1eomt.html",tooltip=" "];
  Node33 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ui_message_handler" ,fontname="Helvetica"];
  Node33 [label="ui_message_handlert",height=0.2,width=0.4,color="black",URL="$classui__message__handlert.html",tooltip=" "];
  Node15 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_handler" ,fontname="Helvetica"];
  Node34 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" json_stream" ,fontname="Helvetica"];
  Node34 [label="std::unique_ptr\< json\l_stream_arrayt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node35 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node35 [label="json_stream_arrayt",height=0.2,width=0.4,color="black",URL="$classjson__stream__arrayt.html",tooltip="Provides methods for streaming JSON arrays."];
  Node36 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="json_streamt",height=0.2,width=0.4,color="black",URL="$classjson__streamt.html",tooltip="This class provides a facility for streaming JSON objects directly to the output instead of waiting f..."];
  Node37 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" child_stream" ,fontname="Helvetica"];
  Node37 [label="std::unique_ptr\< json\l_streamt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node36 -> Node37 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node38 -> Node37 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< json_streamt \>" ,fontname="Helvetica"];
  Node38 [label="std::unique_ptr\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node5 -> Node38 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node39 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" object" ,fontname="Helvetica"];
  Node39 [label="std::map\< std::string,\l jsont \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node9 -> Node39 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::string, jsont \>" ,fontname="Helvetica"];
  Node42 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" out" ,fontname="Helvetica"];
  Node42 [label="std::ostream",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node38 -> Node34 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< json_stream_arrayt \>" ,fontname="Helvetica"];
  Node44 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" console_message_handler" ,fontname="Helvetica"];
  Node44 [label="std::unique_ptr\< console\l_message_handlert \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node45 -> Node44 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node45 [label="console_message_handlert",height=0.2,width=0.4,color="black",URL="$classconsole__message__handlert.html",tooltip=" "];
  Node15 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 -> Node44 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< console_message_handlert \>" ,fontname="Helvetica"];
  Node42 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" out" ,fontname="Helvetica"];
  Node46 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" time" ,fontname="Helvetica"];
  Node46 [label="std::unique_ptr\< const\l timestampert \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node47 -> Node46 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node47 [label="timestampert",height=0.2,width=0.4,color="black",URL="$classtimestampert.html",tooltip="Timestamp class hierarchy."];
  Node38 -> Node46 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const timestampert \>" ,fontname="Helvetica"];
  Node48 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" fault_locations" ,fontname="Helvetica"];
  Node48 [label="std::unordered_map\l\< dstringt, fault_location\l_infot \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node49 -> Node48 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node49 [label="fault_location_infot",height=0.2,width=0.4,color="black",URL="$structfault__location__infot.html",tooltip=" "];
  Node50 -> Node49 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" scores" ,fontname="Helvetica"];
  Node50 [label="std::map\< goto_programt\l::const_targett, std::\lsize_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node51 -> Node50 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node51 [label="std::list\< T \>::const\l_iterator",height=0.2,width=0.4,color="grey75",tooltip="STL iterator class."];
  Node9 -> Node50 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_programt::const\l_targett, std::size_t \>" ,fontname="Helvetica"];
  Node13 -> Node48 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node52 -> Node48 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, fault_location\l_infot \>" ,fontname="Helvetica"];
  Node52 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node10 -> Node52 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node5 -> Node52 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node53 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" goto_model" ,fontname="Helvetica"];
  Node53 [label="abstract_goto_modelt",height=0.2,width=0.4,color="black",URL="$classabstract__goto__modelt.html",tooltip="Abstract interface to eager or lazy GOTO models."];
  Node54 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" traces" ,fontname="Helvetica"];
  Node54 [label="goto_trace_storaget",height=0.2,width=0.4,color="black",URL="$classgoto__trace__storaget.html",tooltip=" "];
  Node55 -> Node54 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" property_id_to_trace\l_index" ,fontname="Helvetica"];
  Node55 [label="std::unordered_map\l\< dstringt, std::size_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node55 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node52 -> Node55 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, std::size_t \>" ,fontname="Helvetica"];
  Node56 -> Node54 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" merge_ireps" ,fontname="Helvetica"];
  Node56 [label="merge_irept",height=0.2,width=0.4,color="black",URL="$classmerge__irept.html",tooltip=" "];
  Node57 -> Node56 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" irep_store" ,fontname="Helvetica"];
  Node57 [label="std::unordered_set\l\< irept, irep_hash \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node26 -> Node57 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node58 -> Node57 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irept, irep_hash \>" ,fontname="Helvetica"];
  Node58 [label="std::unordered_set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node10 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node59 -> Node54 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
  Node59 [label="namespacet",height=0.2,width=0.4,color="black",URL="$classnamespacet.html",tooltip="A namespacet is essentially one or two symbol tables bound together, to allow for symbol lookups in t..."];
  Node60 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="namespace_baset",height=0.2,width=0.4,color="black",URL="$classnamespace__baset.html",tooltip="Basic interface for a namespace."];
  Node61 -> Node59 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_table1\nsymbol_table2" ,fontname="Helvetica"];
  Node61 [label="symbol_table_baset",height=0.2,width=0.4,color="black",URL="$classsymbol__table__baset.html",tooltip="The symbol table base class interface."];
  Node62 -> Node61 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_base_map\nsymbol_module_map" ,fontname="Helvetica"];
  Node62 [label="std::multimap\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node10 -> Node62 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node5 -> Node62 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node52 -> Node61 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbols" ,fontname="Helvetica"];
  Node63 -> Node54 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" traces" ,fontname="Helvetica"];
  Node63 [label="std::list\< goto_tracet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node64 -> Node63 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node64 [label="goto_tracet",height=0.2,width=0.4,color="black",URL="$classgoto__tracet.html",tooltip="Trace of a GOTO program."];
  Node65 -> Node64 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" steps" ,fontname="Helvetica"];
  Node65 [label="std::list\< goto_trace\l_stept \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node66 -> Node65 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node66 [label="goto_trace_stept",height=0.2,width=0.4,color="red",URL="$classgoto__trace__stept.html",tooltip="Step of the trace of a GOTO program."];
  Node67 -> Node66 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" io_args" ,fontname="Helvetica"];
  Node67 [label="std::list\< exprt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node68 -> Node67 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node68 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node26 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node67 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< exprt \>" ,fontname="Helvetica"];
  Node69 -> Node66 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" type" ,fontname="Helvetica"];
  Node69 [label="typet",height=0.2,width=0.4,color="black",URL="$classtypet.html",tooltip="The type of an expression, extends irept."];
  Node26 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node66 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" called_function\nformat_string\nproperty_id\nfunction_id\nio_id" ,fontname="Helvetica"];
  Node7 -> Node66 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" comment" ,fontname="Helvetica"];
  Node68 -> Node66 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" full_lhs\ncond_expr\nfull_lhs_value" ,fontname="Helvetica"];
  Node4 -> Node65 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_trace_stept \>" ,fontname="Helvetica"];
  Node4 -> Node63 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_tracet \>" ,fontname="Helvetica"];
}
