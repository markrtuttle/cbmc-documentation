digraph "variable_sensitivity_dependence_domaint"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="variable_sensitivity\l_dependence_domaint",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="variable_sensitivity\l_domaint",height=0.2,width=0.4,color="black",URL="$classvariable__sensitivity__domaint.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ai_domain_baset",height=0.2,width=0.4,color="black",URL="$classai__domain__baset.html",tooltip="The interface offered by a domain, allows code to manipulate domains without knowing their exact type..."];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" abstract_state" ,fontname="Helvetica"];
  Node4 [label="abstract_environmentt",height=0.2,width=0.4,color="black",URL="$classabstract__environmentt.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" object_factory" ,fontname="Helvetica"];
  Node5 [label="std::shared_ptr\< variable\l_sensitivity_object_factoryt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node6 [label="variable_sensitivity\l_object_factoryt",height=0.2,width=0.4,color="black",URL="$classvariable__sensitivity__object__factoryt.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" configuration" ,fontname="Helvetica"];
  Node7 [label="vsd_configt",height=0.2,width=0.4,color="black",URL="$structvsd__configt.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" array_option_size_mappings\nunion_option_mappings\npointer_option_mappings\narray_option_mappings\nstruct_option_mappings\nvalue_option_mappings" ,fontname="Helvetica"];
  Node8 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node9 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node10 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< variable_sensitivity\l_object_factoryt \>" ,fontname="Helvetica"];
  Node11 [label="std::shared_ptr\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node10 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node12 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ,fontname="Helvetica"];
  Node12 [label="sharing_mapt\< dstringt,\l abstract_object_pointert \>",height=0.2,width=0.4,color="black",URL="$classsharing__mapt.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ,fontname="Helvetica"];
  Node13 [label="sharing_nodet\< key\l_type, mapped_type \>",height=0.2,width=0.4,color="black",URL="$classsharing__nodet.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data" ,fontname="Helvetica"];
  Node14 [label="small_shared_n_way\l_ptrt\< d_containert\l\< key_type, mapped_type,\l equalT \>, d_leaft\< SN\l_TYPE_ARGS \>, d_internalt\l\< SN_TYPE_ARGS \> \>",height=0.2,width=0.4,color="black",URL="$classsmall__shared__n__way__ptrt.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" p" ,fontname="Helvetica"];
  Node15 [label="small_shared_n_way\l_pointee_baset\< N, Num \>",height=0.2,width=0.4,color="black",URL="$classsmall__shared__n__way__pointee__baset.html",tooltip=" "];
  Node16 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< d_containert\< key\l_type, mapped_type,\l equalT \>, d_leaft\< SN\l_TYPE_ARGS \>, d_internalt\l\< SN_TYPE_ARGS \> \>" ,fontname="Helvetica"];
  Node16 [label="small_shared_n_way\l_ptrt\< Ts \>",height=0.2,width=0.4,color="black",URL="$classsmall__shared__n__way__ptrt.html",tooltip="This class is similar to small_shared_ptrt and boost's intrusive_ptr."];
  Node15 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" p" ,fontname="Helvetica"];
  Node17 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< key_type, mapped\l_type \>" ,fontname="Helvetica"];
  Node17 [label="sharing_nodet\< keyT,\l valueT, equalT \>",height=0.2,width=0.4,color="black",URL="$classsharing__nodet.html",tooltip=" "];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data" ,fontname="Helvetica"];
  Node18 [label="small_shared_n_way\l_ptrt\< d_containert\l\< keyT, valueT, equalT\l \>, d_leaft\< SN_TYPE_ARGS\l \>, d_internalt\< SN_TYPE\l_ARGS \> \>",height=0.2,width=0.4,color="black",URL="$classsmall__shared__n__way__ptrt.html",tooltip=" "];
  Node15 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" p" ,fontname="Helvetica"];
  Node16 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< d_containert\< keyT,\l valueT, equalT \>, d\l_leaft\< SN_TYPE_ARGS \>\l, d_internalt\< SN_TYPE\l_ARGS \> \>" ,fontname="Helvetica"];
  Node19 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, abstract\l_object_pointert \>" ,fontname="Helvetica"];
  Node19 [label="sharing_mapt\< keyT,\l valueT, fail_if_equal,\l hashT, equalT \>",height=0.2,width=0.4,color="black",URL="$classsharing__mapt.html",tooltip="A map implemented as a tree where subtrees can be shared between different maps."];
  Node13 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ,fontname="Helvetica"];
  Node20 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" control_deps" ,fontname="Helvetica"];
  Node20 [label="std::map\< goto_programt\l::const_targett, tvt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node21 [label="tvt",height=0.2,width=0.4,color="black",URL="$classtvt.html",tooltip=" "];
  Node22 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node22 [label="std::list\< T \>::const\l_iterator",height=0.2,width=0.4,color="grey75",tooltip="STL iterator class."];
  Node8 -> Node20 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_programt::const\l_targett, tvt \>" ,fontname="Helvetica"];
  Node23 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" node_id" ,fontname="Helvetica"];
  Node23 [label="grapht\< vs_dep_nodet \>",height=0.2,width=0.4,color="black",URL="$classgrapht.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" nodes" ,fontname="Helvetica"];
  Node24 [label="std::vector\< nodet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node25 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< nodet \>" ,fontname="Helvetica"];
  Node25 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node10 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node26 -> Node23 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< vs_dep_nodet \>" ,fontname="Helvetica"];
  Node26 [label="grapht\< N \>",height=0.2,width=0.4,color="black",URL="$classgrapht.html",tooltip="A generic directed graph with a parametric node type."];
  Node24 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" nodes" ,fontname="Helvetica"];
  Node27 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" control_dep_candidates\ncontrol_dep_calls\ncontrol_dep_call_candidates" ,fontname="Helvetica"];
  Node27 [label="std::set\< goto_programt\l::const_targett \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node22 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node28 -> Node27 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_programt::const\l_targett \>" ,fontname="Helvetica"];
  Node28 [label="std::set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node29 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" domain_data_deps" ,fontname="Helvetica"];
  Node29 [label="std::map\< goto_programt\l::const_targett, std::\lset\< exprt \>, dependency\l_ordert \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node30 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node30 [label="std::set\< exprt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node31 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node31 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node32 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node33 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip=" "];
  Node34 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node34 [label="tree_nodet\< treet,\l named_subtreest, sharing \>",height=0.2,width=0.4,color="red",URL="$classtree__nodet.html",tooltip="A node with data in a tree, it contains:"];
  Node38 -> Node33 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irept, forward_list\l_as_mapt\< irep_idt, irept \> \>" ,fontname="Helvetica"];
  Node38 [label="sharing_treet\< derivedt,\l named_subtreest \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip="Base class for tree-like data structures with sharing."];
  Node34 -> Node38 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node28 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< exprt \>" ,fontname="Helvetica"];
  Node22 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node8 -> Node29 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_programt::const\l_targett, std::set\< exprt\l \>, dependency_ordert \>" ,fontname="Helvetica"];
  Node21 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" has_values" ,fontname="Helvetica"];
}
