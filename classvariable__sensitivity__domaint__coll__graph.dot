digraph "variable_sensitivity_domaint"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="variable_sensitivity\l_domaint",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ai_domain_baset",height=0.2,width=0.4,color="black",URL="$classai__domain__baset.html",tooltip="The interface offered by a domain, allows code to manipulate domains without knowing their exact type..."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" abstract_state" ,fontname="Helvetica"];
  Node3 [label="abstract_environmentt",height=0.2,width=0.4,color="black",URL="$classabstract__environmentt.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" object_factory" ,fontname="Helvetica"];
  Node4 [label="std::shared_ptr\< variable\l_sensitivity_object_factoryt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node5 [label="variable_sensitivity\l_object_factoryt",height=0.2,width=0.4,color="black",URL="$classvariable__sensitivity__object__factoryt.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" configuration" ,fontname="Helvetica"];
  Node6 [label="vsd_configt",height=0.2,width=0.4,color="black",URL="$structvsd__configt.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" array_option_size_mappings\nunion_option_mappings\npointer_option_mappings\narray_option_mappings\nstruct_option_mappings\nvalue_option_mappings" ,fontname="Helvetica"];
  Node7 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node8 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node9 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< variable_sensitivity\l_object_factoryt \>" ,fontname="Helvetica"];
  Node10 [label="std::shared_ptr\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node11 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ,fontname="Helvetica"];
  Node11 [label="sharing_mapt\< dstringt,\l abstract_object_pointert \>",height=0.2,width=0.4,color="black",URL="$classsharing__mapt.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ,fontname="Helvetica"];
  Node12 [label="sharing_nodet\< key\l_type, mapped_type \>",height=0.2,width=0.4,color="black",URL="$classsharing__nodet.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data" ,fontname="Helvetica"];
  Node13 [label="small_shared_n_way\l_ptrt\< d_containert\l\< key_type, mapped_type,\l equalT \>, d_leaft\< SN\l_TYPE_ARGS \>, d_internalt\l\< SN_TYPE_ARGS \> \>",height=0.2,width=0.4,color="black",URL="$classsmall__shared__n__way__ptrt.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" p" ,fontname="Helvetica"];
  Node14 [label="small_shared_n_way\l_pointee_baset\< N, Num \>",height=0.2,width=0.4,color="black",URL="$classsmall__shared__n__way__pointee__baset.html",tooltip=" "];
  Node15 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< d_containert\< key\l_type, mapped_type,\l equalT \>, d_leaft\< SN\l_TYPE_ARGS \>, d_internalt\l\< SN_TYPE_ARGS \> \>" ,fontname="Helvetica"];
  Node15 [label="small_shared_n_way\l_ptrt\< Ts \>",height=0.2,width=0.4,color="black",URL="$classsmall__shared__n__way__ptrt.html",tooltip="This class is similar to small_shared_ptrt and boost's intrusive_ptr."];
  Node14 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" p" ,fontname="Helvetica"];
  Node16 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< key_type, mapped\l_type \>" ,fontname="Helvetica"];
  Node16 [label="sharing_nodet\< keyT,\l valueT, equalT \>",height=0.2,width=0.4,color="black",URL="$classsharing__nodet.html",tooltip=" "];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data" ,fontname="Helvetica"];
  Node17 [label="small_shared_n_way\l_ptrt\< d_containert\l\< keyT, valueT, equalT\l \>, d_leaft\< SN_TYPE_ARGS\l \>, d_internalt\< SN_TYPE\l_ARGS \> \>",height=0.2,width=0.4,color="black",URL="$classsmall__shared__n__way__ptrt.html",tooltip=" "];
  Node14 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" p" ,fontname="Helvetica"];
  Node15 -> Node17 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< d_containert\< keyT,\l valueT, equalT \>, d\l_leaft\< SN_TYPE_ARGS \>\l, d_internalt\< SN_TYPE\l_ARGS \> \>" ,fontname="Helvetica"];
  Node18 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, abstract\l_object_pointert \>" ,fontname="Helvetica"];
  Node18 [label="sharing_mapt\< keyT,\l valueT, fail_if_equal,\l hashT, equalT \>",height=0.2,width=0.4,color="black",URL="$classsharing__mapt.html",tooltip="A map implemented as a tree where subtrees can be shared between different maps."];
  Node12 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ,fontname="Helvetica"];
}
