digraph "partial_order_concurrencyt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="partial_order_concurrencyt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for implementing memory models via additional constraints for SSA equations."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" clock_type" ,fontname="Helvetica"];
  Node2 [label="typet",height=0.2,width=0.4,color="black",URL="$classtypet.html",tooltip="The type of an expression, extends irept."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node5 [label="tree_nodet\< treet,\l named_subtreest, sharing \>",height=0.2,width=0.4,color="black",URL="$classtree__nodet.html",tooltip="A node with data in a tree, it contains:"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ref_count_ift\< true \>",height=0.2,width=0.4,color="black",URL="$structref__count__ift_3_01true_01_4.html",tooltip=" "];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" sub" ,fontname="Helvetica"];
  Node7 [label="std::vector\< treet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< treet \>" ,fontname="Helvetica"];
  Node8 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node9 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data" ,fontname="Helvetica"];
  Node10 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node11 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irept, forward_list\l_as_mapt\< irep_idt, irept \> \>" ,fontname="Helvetica"];
  Node11 [label="sharing_treet\< derivedt,\l named_subtreest \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip="Base class for tree-like data structures with sharing."];
  Node5 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" empty_d\ndata" ,fontname="Helvetica"];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" address_map" ,fontname="Helvetica"];
  Node12 [label="std::map\< irep_idt,\l a_rect \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node13 [label="partial_order_concurrencyt\l::a_rect",height=0.2,width=0.4,color="black",URL="$structpartial__order__concurrencyt_1_1a__rect.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" writes\nreads" ,fontname="Helvetica"];
  Node14 [label="std::vector\< event_it \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node15 [label="std::list\< T \>::const\l_iterator",height=0.2,width=0.4,color="grey75",tooltip="STL iterator class."];
  Node8 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< event_it \>" ,fontname="Helvetica"];
  Node16 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, a_rect \>" ,fontname="Helvetica"];
  Node16 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node17 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
  Node18 [label="namespacet",height=0.2,width=0.4,color="black",URL="$classnamespacet.html",tooltip="A namespacet is essentially one or two symbol tables bound together, to allow for symbol lookups in t..."];
  Node19 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="namespace_baset",height=0.2,width=0.4,color="black",URL="$classnamespace__baset.html",tooltip="Basic interface for a namespace."];
  Node20 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_table1\nsymbol_table2" ,fontname="Helvetica"];
  Node20 [label="symbol_table_baset",height=0.2,width=0.4,color="black",URL="$classsymbol__table__baset.html",tooltip="The symbol table base class interface."];
  Node21 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_base_map\nsymbol_module_map" ,fontname="Helvetica"];
  Node21 [label="std::multimap\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node17 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node9 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node22 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbols" ,fontname="Helvetica"];
  Node22 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node17 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node9 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node23 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numbering" ,fontname="Helvetica"];
  Node23 [label="std::map\< event_it,\l unsigned \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node16 -> Node23 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< event_it, unsigned \>" ,fontname="Helvetica"];
}
