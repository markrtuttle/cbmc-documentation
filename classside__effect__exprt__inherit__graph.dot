digraph "side_effect_exprt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="side_effect_exprt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="An expression containing a side effect."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irept, forward_list\l_as_mapt\< irep_idt, irept \> \>" ,fontname="Helvetica"];
  Node5 [label="sharing_treet\< derivedt,\l named_subtreest \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip="Base class for tree-like data structures with sharing."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="side_effect_expr_assignt",height=0.2,width=0.4,color="black",URL="$classside__effect__expr__assignt.html",tooltip="A side_effect_exprt that performs an assignment."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="side_effect_expr_function\l_callt",height=0.2,width=0.4,color="black",URL="$classside__effect__expr__function__callt.html",tooltip="A side_effect_exprt representation of a function call side effect."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="side_effect_expr_nondett",height=0.2,width=0.4,color="black",URL="$classside__effect__expr__nondett.html",tooltip="A side_effect_exprt that returns a non-deterministically chosen value."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="side_effect_expr_overflowt",height=0.2,width=0.4,color="black",URL="$classside__effect__expr__overflowt.html",tooltip="A Boolean expression returning true, iff the result of performing operation kind on operands a and b ..."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="side_effect_expr_statement\l_expressiont",height=0.2,width=0.4,color="black",URL="$classside__effect__expr__statement__expressiont.html",tooltip="A side_effect_exprt that contains a statement."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="side_effect_expr_throwt",height=0.2,width=0.4,color="black",URL="$classside__effect__expr__throwt.html",tooltip="A side_effect_exprt representation of a side effect that throws an exception."];
}
