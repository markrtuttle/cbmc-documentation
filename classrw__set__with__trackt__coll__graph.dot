digraph "rw_set_with_trackt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="rw_set_with_trackt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="_rw_set_loct",height=0.2,width=0.4,color="black",URL="$class__rw__set__loct.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="rw_set_baset",height=0.2,width=0.4,color="black",URL="$classrw__set__baset.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ns" ,fontname="Helvetica"];
  Node4 [label="namespacet",height=0.2,width=0.4,color="black",URL="$classnamespacet.html",tooltip="A namespacet is essentially one or two symbol tables bound together, to allow for symbol lookups in t..."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="namespace_baset",height=0.2,width=0.4,color="black",URL="$classnamespace__baset.html",tooltip="Basic interface for a namespace."];
  Node6 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_table1\nsymbol_table2" ,fontname="Helvetica"];
  Node6 [label="symbol_table_baset",height=0.2,width=0.4,color="black",URL="$classsymbol__table__baset.html",tooltip="The symbol table base class interface."];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_base_map\nsymbol_module_map" ,fontname="Helvetica"];
  Node7 [label="std::multimap\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node8 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node9 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbols" ,fontname="Helvetica"];
  Node10 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node9 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node11 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" r_entries\nw_entries" ,fontname="Helvetica"];
  Node11 [label="std::unordered_map\l\< irep_idt, entryt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node12 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node13 [label="rw_set_baset::entryt",height=0.2,width=0.4,color="black",URL="$structrw__set__baset_1_1entryt.html",tooltip=" "];
  Node12 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" object" ,fontname="Helvetica"];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" guard" ,fontname="Helvetica"];
  Node14 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="irept",height=0.2,width=0.4,color="red",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node22 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_expr" ,fontname="Helvetica"];
  Node22 [label="symbol_exprt",height=0.2,width=0.4,color="black",URL="$classsymbol__exprt.html",tooltip="Expression to hold a symbol (variable)"];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="nullary_exprt",height=0.2,width=0.4,color="red",URL="$classnullary__exprt.html",tooltip="An expression without operands."];
  Node10 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, entryt \>" ,fontname="Helvetica"];
  Node25 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" value_sets" ,fontname="Helvetica"];
  Node25 [label="value_setst",height=0.2,width=0.4,color="black",URL="$classvalue__setst.html",tooltip=" "];
  Node12 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" function_id" ,fontname="Helvetica"];
  Node26 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" target" ,fontname="Helvetica"];
  Node26 [label="std::list\< T \>::const\l_iterator",height=0.2,width=0.4,color="grey75",tooltip="STL iterator class."];
  Node27 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dereferenced" ,fontname="Helvetica"];
  Node27 [label="std::vector\< entryt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node27 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< entryt \>" ,fontname="Helvetica"];
  Node20 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node9 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node28 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dereferenced_from" ,fontname="Helvetica"];
  Node28 [label="std::map\< const dstringt,\l const dstringt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys\nelements" ,fontname="Helvetica"];
  Node29 -> Node28 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const dstringt, const\l dstringt \>" ,fontname="Helvetica"];
  Node29 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node9 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node30 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" set_reads" ,fontname="Helvetica"];
  Node30 [label="std::set\< dstringt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node31 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt \>" ,fontname="Helvetica"];
  Node31 [label="std::set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node8 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
}
