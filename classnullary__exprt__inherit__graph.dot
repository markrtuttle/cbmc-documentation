digraph "nullary_exprt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="nullary_exprt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="An expression without operands."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="expr_protectedt",height=0.2,width=0.4,color="black",URL="$classexpr__protectedt.html",tooltip="Base class for all expressions."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="exprt",height=0.2,width=0.4,color="black",URL="$classexprt.html",tooltip="Base class for all expressions."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="irept",height=0.2,width=0.4,color="black",URL="$classirept.html",tooltip="There are a large number of kinds of tree structured or tree-like data in CPROVER."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="sharing_treet\< irept,\l forward_list_as_mapt\l\< irep_idt, irept \> \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irept, forward_list\l_as_mapt\< irep_idt, irept \> \>" ,fontname="Helvetica"];
  Node6 [label="sharing_treet\< derivedt,\l named_subtreest \>",height=0.2,width=0.4,color="black",URL="$classsharing__treet.html",tooltip="Base class for tree-like data structures with sharing."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ansi_c_declaratort",height=0.2,width=0.4,color="black",URL="$classansi__c__declaratort.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="class_method_descriptor\l_exprt",height=0.2,width=0.4,color="black",URL="$classclass__method__descriptor__exprt.html",tooltip="An expression describing a method on a class."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="constant_exprt",height=0.2,width=0.4,color="black",URL="$classconstant__exprt.html",tooltip="A constant literal expression."];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="false_exprt",height=0.2,width=0.4,color="black",URL="$classfalse__exprt.html",tooltip="The Boolean constant false."];
  Node9 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="null_pointer_exprt",height=0.2,width=0.4,color="black",URL="$classnull__pointer__exprt.html",tooltip="The null pointer constant."];
  Node9 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="true_exprt",height=0.2,width=0.4,color="black",URL="$classtrue__exprt.html",tooltip="The Boolean constant true."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="empty_union_exprt",height=0.2,width=0.4,color="black",URL="$classempty__union__exprt.html",tooltip="Union constructor to support unions without any member (a GCC/Clang feature)."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="infinity_exprt",height=0.2,width=0.4,color="black",URL="$classinfinity__exprt.html",tooltip="An expression denoting infinity."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="nil_exprt",height=0.2,width=0.4,color="black",URL="$classnil__exprt.html",tooltip="The NIL expression."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="nondet_symbol_exprt",height=0.2,width=0.4,color="black",URL="$classnondet__symbol__exprt.html",tooltip="Expression to hold a nondeterministic choice."];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="object_address_exprt",height=0.2,width=0.4,color="black",URL="$classobject__address__exprt.html",tooltip="Operator to return the address of an object."];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="smt2_convt::smt2_symbolt",height=0.2,width=0.4,color="black",URL="$classsmt2__convt_1_1smt2__symbolt.html",tooltip=" "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="string_constantt",height=0.2,width=0.4,color="black",URL="$classstring__constantt.html",tooltip=" "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="symbol_exprt",height=0.2,width=0.4,color="black",URL="$classsymbol__exprt.html",tooltip="Expression to hold a symbol (variable)"];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="decorated_symbol_exprt",height=0.2,width=0.4,color="black",URL="$classdecorated__symbol__exprt.html",tooltip="Expression to hold a symbol (variable) with extra accessors to ID_c_static_lifetime and ID_C_thread_l..."];
  Node20 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="ssa_exprt",height=0.2,width=0.4,color="black",URL="$classssa__exprt.html",tooltip="Expression providing an SSA-renamed symbol of expressions."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="type_exprt",height=0.2,width=0.4,color="black",URL="$classtype__exprt.html",tooltip="An expression denoting a type."];
}
