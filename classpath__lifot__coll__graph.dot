digraph "path_lifot"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="path_lifot",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="LIFO save queue: depth-first search, try to finish paths."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="path_storaget",height=0.2,width=0.4,color="black",URL="$classpath__storaget.html",tooltip="Storage for symbolic execution paths to be resumed later."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" safe_pointers" ,fontname="Helvetica"];
  Node3 [label="std::unordered_map\l\< dstringt, local_safe\l_pointerst \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node4 [label="dstringt",height=0.2,width=0.4,color="black",URL="$classdstringt.html",tooltip="dstringt has one field, an unsigned integer no which is an index into a static table of strings."];
  Node5 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node5 [label="local_safe_pointerst",height=0.2,width=0.4,color="black",URL="$classlocal__safe__pointerst.html",tooltip="A very simple, cheap analysis to determine when dereference operations are trivially guarded by a che..."];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" non_null_expressions" ,fontname="Helvetica"];
  Node6 [label="std::map\< unsigned,\l std::set\< exprt, local\l_safe_pointerst::type_comparet \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node7 [label="std::set\< exprt, local\l_safe_pointerst::type\l_comparet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, std::set\l\< exprt, local_safe_pointerst\l::type_comparet \> \>" ,fontname="Helvetica"];
  Node19 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node18 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node18 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node15 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, local_safe\l_pointerst \>" ,fontname="Helvetica"];
  Node20 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node18 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node15 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node21 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dirty" ,fontname="Helvetica"];
  Node21 [label="incremental_dirtyt",height=0.2,width=0.4,color="black",URL="$classincremental__dirtyt.html",tooltip="Wrapper for dirtyt that permits incremental population, ensuring each function is analysed exactly on..."];
  Node22 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dirty_processed_functions" ,fontname="Helvetica"];
  Node22 [label="std::unordered_set\l\< dstringt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node23 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt \>" ,fontname="Helvetica"];
  Node23 [label="std::unordered_set\< K \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node18 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node24 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dirty" ,fontname="Helvetica"];
  Node24 [label="dirtyt",height=0.2,width=0.4,color="black",URL="$classdirtyt.html",tooltip="Dirty variables are ones which have their address taken so we can't reliably work out where they may ..."];
  Node22 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dirty" ,fontname="Helvetica"];
  Node25 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" build_symex_nondet" ,fontname="Helvetica"];
  Node25 [label="symex_nondet_generatort",height=0.2,width=0.4,color="black",URL="$classsymex__nondet__generatort.html",tooltip="Functor generating fresh nondet symbols."];
  Node26 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" loop_analysis_map" ,fontname="Helvetica"];
  Node26 [label="std::unordered_map\l\< dstringt, std::shared\l_ptr\< lexical_loops_templatet \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node27 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node27 [label="std::shared_ptr\< lexical\l_loops_templatet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node28 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node28 [label="lexical_loops_templatet\l\< P, T \>",height=0.2,width=0.4,color="black",URL="$classlexical__loops__templatet.html",tooltip="Main driver for working out if a class (normally goto_programt) has any lexical loops."];
  Node29 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="loop_analysist\< T \>",height=0.2,width=0.4,color="red",URL="$classloop__analysist.html",tooltip=" "];
  Node33 -> Node27 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< lexical_loops_templatet \>" ,fontname="Helvetica"];
  Node33 [label="std::shared_ptr\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node15 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node4 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node20 -> Node26 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< dstringt, std::shared\l_ptr\< lexical_loops_templatet \> \>" ,fontname="Helvetica"];
  Node34 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" l2_indices\nl1_indices" ,fontname="Helvetica"];
  Node34 [label="std::unordered_map\l\< irep_idt, std::size_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node20 -> Node34 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, std::size_t \>" ,fontname="Helvetica"];
  Node35 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" paths" ,fontname="Helvetica"];
  Node35 [label="std::list\< patht \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node36 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node36 [label="std::list\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node15 -> Node36 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node36 -> Node35 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< patht \>" ,fontname="Helvetica"];
  Node37 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" last_peeked" ,fontname="Helvetica"];
  Node37 [label="std::list\< path_storaget\l::patht \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node38 -> Node37 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node38 [label="path_storaget::patht",height=0.2,width=0.4,color="black",URL="$structpath__storaget_1_1patht.html",tooltip="Information saved at a conditional goto to resume execution."];
  Node39 -> Node38 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" state" ,fontname="Helvetica"];
  Node39 [label="goto_symex_statet",height=0.2,width=0.4,color="black",URL="$classgoto__symex__statet.html",tooltip="Central data structure: state."];
  Node40 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="goto_statet",height=0.2,width=0.4,color="black",URL="$classgoto__statet.html",tooltip="Container for data that varies per program point, e.g."];
  Node41 -> Node40 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" propagation" ,fontname="Helvetica"];
  Node41 [label="sharing_mapt\< dstringt,\l exprt \>",height=0.2,width=0.4,color="red",URL="$classsharing__mapt.html",tooltip=" "];
  Node49 -> Node40 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" level2" ,fontname="Helvetica"];
  Node49 [label="symex_level2t",height=0.2,width=0.4,color="black",URL="$structsymex__level2t.html",tooltip="Functor to set the level 2 renaming of SSA expressions."];
  Node50 -> Node49 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" current_names" ,fontname="Helvetica"];
  Node50 [label="sharing_mapt\< irep\l_idt, std::pair\< ssa\l_exprt, std::size_t \> \>",height=0.2,width=0.4,color="red",URL="$classsharing__mapt.html",tooltip=" "];
  Node51 -> Node40 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dereference_cache" ,fontname="Helvetica"];
  Node51 [label="sharing_mapt\< exprt,\l symbol_exprt, false,\l irep_hash \>",height=0.2,width=0.4,color="red",URL="$classsharing__mapt.html",tooltip=" "];
  Node52 -> Node40 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" guard" ,fontname="Helvetica"];
  Node52 [label="guard_exprt",height=0.2,width=0.4,color="red",URL="$classguard__exprt.html",tooltip=" "];
  Node53 -> Node40 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" value_set" ,fontname="Helvetica"];
  Node53 [label="value_sett",height=0.2,width=0.4,color="red",URL="$classvalue__sett.html",tooltip="State type in value_set_domaint, used in value-set analysis and goto-symex."];
  Node59 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" read_in_atomic_section" ,fontname="Helvetica"];
  Node59 [label="std::unordered_map\l\< ssa_exprt, a_s_r_entryt,\l irep_hash \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node60 -> Node59 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node60 [label="ssa_exprt",height=0.2,width=0.4,color="red",URL="$classssa__exprt.html",tooltip="Expression providing an SSA-renamed symbol of expressions."];
  Node20 -> Node59 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ssa_exprt, a_s_r\l_entryt, irep_hash \>" ,fontname="Helvetica"];
  Node64 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbol_table" ,fontname="Helvetica"];
  Node64 [label="symbol_tablet",height=0.2,width=0.4,color="black",URL="$classsymbol__tablet.html",tooltip="The symbol table."];
  Node65 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="symbol_table_baset",height=0.2,width=0.4,color="red",URL="$classsymbol__table__baset.html",tooltip="The symbol table base class interface."];
  Node20 -> Node65 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symbols" ,fontname="Helvetica"];
  Node67 -> Node64 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" internal_symbol_module\l_map\ninternal_symbol_base_map" ,fontname="Helvetica"];
  Node67 [label="std::multimap\< irep\l_idt, irep_idt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node67 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys\nelements" ,fontname="Helvetica"];
  Node68 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" record_events" ,fontname="Helvetica"];
  Node68 [label="std::stack\< bool \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node69 -> Node68 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< bool \>" ,fontname="Helvetica"];
  Node69 [label="std::stack\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node15 -> Node69 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node21 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dirty" ,fontname="Helvetica"];
  Node70 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" guard_manager" ,fontname="Helvetica"];
  Node70 [label="guard_expr_managert",height=0.2,width=0.4,color="black",URL="$structguard__expr__managert.html",tooltip="This is unused by this implementation of guards, but can be used by other implementations of the same..."];
  Node71 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" symex_target" ,fontname="Helvetica"];
  Node71 [label="symex_target_equationt",height=0.2,width=0.4,color="black",URL="$classsymex__target__equationt.html",tooltip="Inheriting the interface of symex_targett this class represents the SSA form of the input program as ..."];
  Node72 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="symex_targett",height=0.2,width=0.4,color="black",URL="$classsymex__targett.html",tooltip="The interface of the target container for symbolic execution to record its symbolic steps into."];
  Node73 -> Node71 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" log" ,fontname="Helvetica"];
  Node73 [label="messaget",height=0.2,width=0.4,color="black",URL="$classmessaget.html",tooltip="Class that provides messages with a built-in verbosity 'level'."];
  Node74 -> Node73 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message_handler" ,fontname="Helvetica"];
  Node74 [label="message_handlert",height=0.2,width=0.4,color="red",URL="$classmessage__handlert.html",tooltip=" "];
  Node76 -> Node73 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" cyan\nbright_yellow\nbold\nyellow\nbright_blue\nmagenta\nreset\nbright_magenta\nunderline\nblue\n..." ,fontname="Helvetica"];
  Node76 [label="messaget::commandt",height=0.2,width=0.4,color="black",URL="$classmessaget_1_1commandt.html",tooltip=" "];
  Node77 -> Node73 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mstream" ,fontname="Helvetica"];
  Node77 [label="messaget::mstreamt",height=0.2,width=0.4,color="red",URL="$classmessaget_1_1mstreamt.html",tooltip=" "];
  Node73 -> Node77 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" message" ,fontname="Helvetica"];
  Node84 -> Node73 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" eom" ,fontname="Helvetica"];
  Node84 [label="messaget::eomt",height=0.2,width=0.4,color="black",URL="$classmessaget_1_1eomt.html",tooltip=" "];
  Node85 -> Node71 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" merge_irep" ,fontname="Helvetica"];
  Node85 [label="merge_irept",height=0.2,width=0.4,color="red",URL="$classmerge__irept.html",tooltip=" "];
  Node87 -> Node71 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SSA_steps" ,fontname="Helvetica"];
  Node87 [label="std::list\< SSA_stept \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node36 -> Node87 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SSA_stept \>" ,fontname="Helvetica"];
  Node94 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" field_sensitivity" ,fontname="Helvetica"];
  Node94 [label="field_sensitivityt",height=0.2,width=0.4,color="black",URL="$classfield__sensitivityt.html",tooltip="Control granularity of object accesses."];
  Node92 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" source" ,fontname="Helvetica"];
  Node92 [label="symex_targett::sourcet",height=0.2,width=0.4,color="black",URL="$structsymex__targett_1_1sourcet.html",tooltip="Identifies source in the context of symbolic execution."];
  Node4 -> Node92 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" function_id" ,fontname="Helvetica"];
  Node95 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" written_in_atomic_section" ,fontname="Helvetica"];
  Node95 [label="std::unordered_map\l\< ssa_exprt, a_s_w_entryt,\l irep_hash \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node36 -> Node95 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node60 -> Node95 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node20 -> Node95 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ssa_exprt, a_s_w\l_entryt, irep_hash \>" ,fontname="Helvetica"];
  Node96 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" threads" ,fontname="Helvetica"];
  Node96 [label="std::vector\< goto_symex\l_statet::threadt \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node97 -> Node96 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node97 [label="goto_symex_statet::\lthreadt",height=0.2,width=0.4,color="red",URL="$structgoto__symex__statet_1_1threadt.html",tooltip=" "];
  Node52 -> Node97 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" guard" ,fontname="Helvetica"];
  Node4 -> Node97 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" function_id" ,fontname="Helvetica"];
  Node14 -> Node96 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< goto_symex_statet\l::threadt \>" ,fontname="Helvetica"];
  Node14 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip="STL class."];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node101 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" l1_types" ,fontname="Helvetica"];
  Node101 [label="std::unordered_map\l\< irep_idt, typet \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node102 -> Node101 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node102 [label="typet",height=0.2,width=0.4,color="red",URL="$classtypet.html",tooltip="The type of an expression, extends irept."];
  Node4 -> Node101 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node20 -> Node101 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< irep_idt, typet \>" ,fontname="Helvetica"];
  Node103 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" level1" ,fontname="Helvetica"];
  Node103 [label="symex_level1t",height=0.2,width=0.4,color="black",URL="$structsymex__level1t.html",tooltip="Functor to set the level 1 renaming of SSA expressions."];
  Node50 -> Node103 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" current_names" ,fontname="Helvetica"];
  Node71 -> Node38 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" equation" ,fontname="Helvetica"];
  Node36 -> Node37 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< path_storaget::patht \>" ,fontname="Helvetica"];
}
